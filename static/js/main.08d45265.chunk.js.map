{"version":3,"sources":["actions/ActionTypes.js","reducers/initialState.js","reducers/index.js","reducers/GeoCacheReducer.js","reducers/authReducer.js","store/index.js","helper/auth.js","component/Header.js","container/Auth.js","component/auth/Login.js","actions/authAction.js","service/AuthService.js","container/LoginContainer/index.js","component/auth/Register.js","container/RegisterContainer/index.js","serviceWorker.js","component/AppComponent/Map.js","component/AppComponent/index.js","actions/geoCacheAction.js","service/Geocaches.js","container/AppContainer/index.js","index.js"],"names":["LOAD_GEO_CACHE","UPDATE_GEO_CACHE","LIKE_GEO_CACHE","AUTH_USER","AUTH_ERROR","REG_ERROR","CLEAR_ERROR","initialState","geoCache","authenticated","errorMessage","regErrorMessage","rootReducer","combineReducers","router","GeoCacheReducer","state","arguments","length","undefined","action","type","Object","toConsumableArray","filter","geo","id","geoCacheDetails","concat","assign","newStae","objectSpread","keys","map","index","likes","Number","auth","loginData","errMsg","toastr","toastrReducer","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","connectRouter","localStorage","getItem","checkAuth","authData","token","JSON","parse","current_time","moment","created_at","expires_in","isBefore","removeItem","setLocalToken","response","setItem","stringify","access_token","getToken","removeAuth","Header","logout","e","preventDefault","_this","props","push","this","react_default","a","createElement","Navbar","color","light","expand","NavbarBrand","href","Nav","className","navbar","NavItem","Link","to","react","onClick","Component","connect","withRouter","Auth","renderBody","_this$props","path","children","Redirect","pathname","component_Header","location","Login","email","password","submitted","handleChange","event","setState","defineProperty","target","name","value","redirectToDashboard","doLogin","loggedInUser","_this$state","redirect","clearError","_this$state2","Row","Col","md","size","offset","style","Form","form","FormGroup","Label","Input","placeholder","onChange","Button","data","dispatch","user","loginUser","grant_type","axios","post","crossdomain","then","catch","err","loginUserService","loadLoginSuccess","error","registerUser","register","first_name","firstName","last_name","lastName","username","userName","registerUserService","regUser","success","regErr","Register","redirectToLogin","doRegister","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","Map","infoOpen","i","onCloseInfo","_this2","likeGeoCache","react_google_maps_lib","defaultZoom","defaultCenter","lat","lng","v","key","position","onCloseClick","withScriptjs","withGoogleMap","App","updateGps","message","updateGeoCache","loadGeoCache","actioncable_client_react_lib","channel","room","onReceived","AppComponent_Map","googleMapURL","loadingElement","height","containerElement","width","mapElement","Table","responsive","title","comments","unlikes","headers","Access-Control-Allow-Origin","Authorization","likeGeo","likeGeoCacheSuccess","get","fetchGeoDetails","loadGeoCacheSuccess","ReactDOM","render","es","store","connected_react_router_lib","lib_default","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","Switch","Route","excat","component","container_Auth","url","AppContainer","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.08d45265.chunk.js","sourcesContent":["export const LOAD_GEO_CACHE = 'LOAD_GEO_CACHE';\nexport const UPDATE_GEO_CACHE = 'UPDATE_GEO_CACHE';\nexport const LIKE_GEO_CACHE = 'LIKE_GEO_CACHE';\nexport const AUTH_USER = \"AUTH_USER\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const REG_ERROR = \"REG_ERROR\";\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\n","export default {\n  geoCache: [],\n  authenticated: \"\",\n  errorMessage: [],\n  regErrorMessage: '',\n};\n","import { combineReducers } from \"redux\";\nimport { routerReducer as router } from \"react-router-redux\";\nimport {reducer as toastrReducer} from 'react-redux-toastr'\nimport GeoCacheReducer from \"./GeoCacheReducer\";\nimport auth from \"./authReducer\";\n\nconst rootReducer = combineReducers({\n  router,\n  GeoCacheReducer,\n  auth,\n  toastr: toastrReducer \n});\n\nexport default rootReducer;\n","import { LOAD_GEO_CACHE, UPDATE_GEO_CACHE, LIKE_GEO_CACHE } from '../actions/ActionTypes';\nimport initialState from './initialState';\n\nexport default function GeoCacheReducer(state = initialState.geoCache, action) {\n  switch (action.type) {\n    case LOAD_GEO_CACHE:\n      return action.geoCache;\n\n    case UPDATE_GEO_CACHE:\n      return [\n        ...state.filter(geo => geo.id != action.geoCacheDetails.id),\n        Object.assign({}, action.geoCacheDetails)\n      ];\n\n    case LIKE_GEO_CACHE:\n      const newStae = { ...state }\n      return Object.keys(newStae).map(index => {\n        if (newStae[index].id !== action.id) {\n          return newStae[index]\n        } else {\n          return {\n            ...newStae[index],\n            \"likes\": Number(newStae[index].likes) + 1\n          }\n        }\n      })\n\n    default:\n      return state;\n  }\n}\n","import { AUTH_USER, AUTH_ERROR, REG_ERROR, CLEAR_ERROR } from \"../actions/ActionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_USER:\n      return { ...state, authenticated: action.loginData };\n    case AUTH_ERROR:\n      return { ...state, errorMessage: action.errMsg };\n    case REG_ERROR:\n      return { ...state, regErrorMessage: action.errMsg };\n    case CLEAR_ERROR:\n      return {\n        ...state, regErrorMessage: '', errorMessage: ''\n      }\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\nimport createHistory from \"history/createBrowserHistory\";\nimport rootReducer from \"../reducers\";\n\nexport const history = createHistory();\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n);\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers,\n  {\n    auth: { authenticated: localStorage.getItem(\"authUser\") }\n  }\n);\n","import moment from \"moment\";\n\nexport const checkAuth = () => {\n  const authData = localStorage.getItem(\"authUser\");\n  if (authData) {\n    const token = JSON.parse(authData);\n\tconst current_time = moment();\n    if (moment(token.created_at * 1000 + token.expires_in * 1000).isBefore(current_time)) {\n      localStorage.removeItem(\"authUser\");\n      return false;\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport const setLocalToken = response => {\n  localStorage.setItem(\"authUser\", JSON.stringify(response));\n  localStorage.setItem(\"token\", response.access_token);\n}\n\nexport const getToken = () => localStorage.getItem('token')\n\nexport const removeAuth = () => {\n\tlocalStorage.removeItem('authUser')\n\tlocalStorage.removeItem('token')\n}","import React, { Component, Fragment } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n} from \"reactstrap\";\n\nimport { removeAuth, checkAuth } from '../helper/auth'\n\nclass Header extends Component {\n\n  logout = e => {\n    e.preventDefault();\n    removeAuth();\n    this.props.history.push('/login')\n  }\n  render() {\n    const { authenticated } = this.props;\n    return (\n      <div>\n        <Navbar color=\"grey\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Geo Location</NavbarBrand>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <Link to=\"/register/\" className=\"nav-link\">\n                Register\n              </Link>\n            </NavItem>\n            {authenticated ? (\n              <Fragment>\n                <NavItem>\n                  <Link to=\"/map\" className=\"nav-link\">\n                    Map\n                  </Link>\n                </NavItem>\n                <NavItem>\n                  <a onClick={this.logout} className=\"nav-link\">\n                    Logout\n                  </a>\n                </NavItem>\n              </Fragment>\n            ) : (\n              <NavItem>\n                <Link to=\"/login/\" className=\"nav-link\">\n                  Login\n                </Link>\n              </NavItem>\n            )}\n          </Nav>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { authenticated: checkAuth() };\n}\n\nexport default connect(mapStateToProps)(withRouter(Header));\n","import { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport React, { Component } from \"react\";\nimport Header from \"../component/Header\";\nimport { checkAuth } from '../helper/auth'\n\nclass Auth extends Component {\n  renderBody = () => {\n    const { authenticated, path, children } = this.props\n    if (authenticated && path === '/login') {\n      return (\n        <Redirect\n          to={{\n            pathname: '/'\n          }}\n        />\n      )\n    } else if (!authenticated && path !== '/login') {\n      return (\n        <Redirect\n          to={{\n            pathname: '/login'\n          }}\n        />\n      )\n    } else {\n      return children\n    }\n  }\n\n  render() {\n    const { authenticated } = this.props\n    return (\n      <div>\n        <Header authenticated={authenticated} {...this.props} />\n        \n        {this.renderBody()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const authenticated = checkAuth()\n  return {\n    authenticated,\n    path: state.router.location.pathname\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n)(Auth);\n","import React, { Component, Fragment } from \"react\";\nimport Header from \"../Header\";\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    submitted: false\n  };\n\n  componentWillUnmount() {\n    const { clearError } = this.props;\n    clearError();\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  redirectToDashboard = () => {\n    this.props.history.push(\"/\");\n  };\n\n  doLogin = () => {\n    this.setState({ submitted: true });\n    const { loggedInUser } = this.props;\n    const { email, password } = this.state;\n    if (email && password) {\n      loggedInUser({ email, password, redirect: this.redirectToDashboard });\n    }\n  };\n\n  render() {\n    const { errorMessage } = this.props;\n\n    const { email, password, submitted } = this.state;\n    return (\n      <Fragment>\n        <Header authenticated={false} {...this.props} />\n        <Row>\n          <Col md={{ size: 6, offset: 3 }}>\n            <div style={{ color: 'red' }}>{errorMessage ? errorMessage : null} </div>\n            <Form>\n              <Row form>\n                <Col md={12}>\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"exampleEmail\"\n                      placeholder=\"Enter Email\"\n                      onChange={this.handleChange}\n                    />\n                    {submitted && !email && (\n                      <div className=\"help-block\">Email is required</div>\n                    )}\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"Password\"\n                      placeholder=\"Enter Password\"\n                      onChange={this.handleChange}\n                    />\n                    {submitted && !password && (\n                      <div className=\"help-block\">Password is required</div>\n                    )}\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Button onClick={this.doLogin}>Submit</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import {toastr} from 'react-redux-toastr'\nimport { AUTH_USER, AUTH_ERROR, REG_ERROR, CLEAR_ERROR } from \"./ActionTypes\";\nimport { loginUserService, registerUserService } from \"../service/AuthService\";\nimport { setLocalToken } from \"../helper/auth\";\n\n\nexport function loadLoginSuccess(loginData) {\n  return {\n    type: AUTH_USER,\n    loginData\n  };\n}\n\nexport function loginFailure(errMsg) {\n  return {\n    type: AUTH_ERROR,\n    errMsg\n  };\n}\n\nexport function loadRegisterSuccess(loginData) {\n  return {\n    type: AUTH_USER,\n    loginData\n  };\n}\n\nexport function resgisterFailure(errMsg) {\n  return {\n    type: REG_ERROR,\n    errMsg\n  };\n}\n\nexport function clearError() {\n  return {\n    type: CLEAR_ERROR\n  };\n}\n\nexport function loggedInUser(data) {\n  return function(dispatch) {\n    const user = {\n      email: data.email,\n      password: data.password\n    };\n    return loginUserService(user)\n      .then(loginData => {\n        setLocalToken(loginData);\n        dispatch(loadLoginSuccess(loginData));\n        data.redirect();\n      })\n      .catch(error => {\n        dispatch(loginFailure(\"Invalid Credentials\"));\n      });\n  };\n}\n\nexport function registerUser(user) {\n  return function(dispatch) {\n    return registerUserService(user)\n      .then(regUser => {\n        toastr.success('Success', 'Successfully registered')\n        dispatch(loadRegisterSuccess(regUser));\n        user.redirect();\n      })\n      .catch(error => {\n        dispatch(\n          resgisterFailure({\n            regErr: \"Error! Email exists or input details is incorrect\"\n          })\n        );\n      });\n  };\n}\n\nexport const logout = () => {\n  localStorage.removeItem(\"authUser\");\n\n  return {\n    type: AUTH_USER,\n    data: \"\"\n  };\n};\n","import axios from \"axios\";\n\nexport function loginUserService(user) {\n  let loginUser = {\n    grant_type: \"password\",\n    email: user.email,\n    password: user.password\n  };\n\n  return axios\n    .post(\n      \"https://blooming-cove-35281.herokuapp.com/api/oauth/token\",\n      loginUser,\n      {\n        crossdomain: true\n      }\n    )\n    .then(response => response.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\nexport function registerUserService(register) {\n  let user = {\n    user: {\n      email: register.email,\n      first_name: register.firstName,\n      last_name: register.lastName,\n      password: register.password,\n      username: register.userName\n    }\n  };\n\n  return axios\n    .post(\"https://blooming-cove-35281.herokuapp.com/api/users\", user, {\n      crossdomain: true\n    })\n    .then(response => response.data)\n    .catch(err => {\n      throw err;\n    });\n}\n","import { connect } from \"react-redux\";\nimport Login from \"../../component/auth/Login\";\nimport { loggedInUser, clearError } from \"../../actions/authAction\";\n\nconst mapStateToProps = state => ({\n  errorMessage: state.auth.errorMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loggedInUser: data => dispatch(loggedInUser(data)),\n  clearError: () => dispatch(clearError())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n","import React, { Component, Fragment } from \"react\";\nimport Header from \"../Header\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Register extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n    submitted: false\n  };\n\n  componentWillUnmount() {\n    const { clearError } = this.props;\n    clearError();\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  redirectToLogin = () => {\n    this.props.history.push(\"/login\");\n  };\n  doRegister = () => {\n    const { registerUser } = this.props;\n    const { firstName, lastName, userName, email, password } = this.state;\n    this.setState({ submitted: true });\n    if (firstName && lastName && userName && email && password) {\n      registerUser({\n        firstName,\n        lastName,\n        userName,\n        email,\n        password,\n        redirect: this.redirectToLogin\n      });\n    }\n  };\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      userName,\n      email,\n      password,\n      submitted\n    } = this.state;\n    const { errorMessage } = this.props;\n    return (\n      <Fragment>\n        <Header authenticated={false} {...this.props} />\n        <Row>\n          <Col md={{ size: 6, offset: 3 }}>\n            <div style={{ color: \"red\" }}>\n              {errorMessage ? errorMessage : null}\n            </div>\n            <Form>\n              <Row form>\n                <Col md={12}>\n                  <FormGroup>\n                    <Label>First Name</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"firstName\"\n                      id=\"FirstName\"\n                      placeholder=\"Enter First Name\"\n                      onChange={this.handleChange}\n                    />\n                    {submitted && !firstName && (\n                      <div className=\"help-block\" style={{ color: \"red\" }}>\n                        First Name is required\n                      </div>\n                    )}\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Last Name</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"lastName\"\n                      id=\"LastName\"\n                      placeholder=\"Enter Last Name\"\n                      onChange={this.handleChange}\n                    />\n                    {submitted && !lastName && (\n                      <div className=\"help-block\" style={{ color: \"red\" }}>\n                        Last Name is required\n                      </div>\n                    )}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Label>User Name</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"userName\"\n                      id=\"UserName\"\n                      placeholder=\"Enter User Name\"\n                      onChange={this.handleChange}\n                    />\n                    {submitted && !userName && (\n                      <div className=\"help-block\" style={{ color: \"red\" }}>\n                        User Name is required\n                      </div>\n                    )}\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"Email\"\n                      placeholder=\"Enter Email\"\n                      onChange={this.handleChange}\n                    />\n                    {submitted && !email && (\n                      <div className=\"help-block\" style={{ color: \"red\" }}>\n                        Email is required\n                      </div>\n                    )}\n                  </FormGroup>\n                  <FormGroup>\n                    <Label>Password</Label>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      id=\"Password\"\n                      placeholder=\"Enter Password\"\n                      onChange={this.handleChange}\n                    />\n                    {submitted && !password && (\n                      <div className=\"help-block\" style={{ color: \"red\" }}>\n                        Password is required\n                      </div>\n                    )}\n                  </FormGroup>\n                </Col>\n              </Row>\n\n              <Button onClick={this.doRegister}>Submit</Button>\n            </Form>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default Register;\n","import { connect } from \"react-redux\";\nimport Register from \"../../component/auth/Register\";\nimport { registerUser, clearError } from \"../../actions/authAction\";\n\nconst mapStateToProps = state => ({\n  errorMessage: state.auth.regErrorMessage.regErr || ''\n});\n\nconst mapDispatchToProps = dispatch => ({\n  registerUser: user => dispatch(registerUser(user)),\n  clearError: () => dispatch(clearError())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Register);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\"\n\nclass Map extends Component {\n\n  state = {\n    infoOpen: false,\n    i: null\n  }\n\n  onCloseInfo = () => {\n    this.setState({\n      index: null\n    })\n  }\n\n  infoOpen = i => {\n    this.setState({\n      index: i\n    })\n  }\n\n  render() {\n    const { geoCache, likeGeoCache } = this.props\n    const { index } = this.state\n    return (\n      <GoogleMap\n        defaultZoom={2}\n        defaultCenter={{ lat: -34.397, lng: 150.644 }}\n      >\n        {\n          geoCache.map((v, i) =>\n            <Marker\n              key={i}\n              position={{ lat: Number(v.lat), lng: Number(v.lng) }}\n              onClick={() => this.infoOpen(i)}\n            >\n              {index === i && <InfoWindow onCloseClick={this.onCloseInfo}>\n                <p>\n                  {`${v.lat}, ${v.lng}`}\n                  <br />\n                  <button onClick={() => likeGeoCache(v.id)}>Like</button>\n                </p>\n              </InfoWindow>}\n            </Marker>\n          )\n        }\n      </GoogleMap>\n    );\n  }\n}\n\nexport default withScriptjs(withGoogleMap(Map));\n","import React, { Component } from 'react';\n\nimport { Table } from 'reactstrap';\n// import socket from '../../helper/socket'\nimport { ActionCable } from 'actioncable-client-react'\nimport Map from './Map';\nimport './index.css';\n\nclass App extends Component {\n  componentDidMount() {\n    const { loadGeoCache } = this.props;\n    loadGeoCache();\n  }\n\n  updateGps = (message) => {\n    console.log(message)\n    const { updateGeoCache } = this.props\n    updateGeoCache(message)\n  }\n\n  render() {\n    const { geoCache, likeGeoCache } = this.props;\n    return (\n      <div className=\"container-fluid mt-3 m-3\">\n        <div className=\"row mb-3\">\n          <ActionCable\n            channel={'GeoCacheChannel'}\n            room={1}\n            onReceived={this.updateGps}\n          />\n          <Map\n            geoCache={geoCache}\n            likeGeoCache={likeGeoCache}\n            googleMapURL=\n            'https://maps.googleapis.com/maps/api/js?v=3&libraries=geometry,drawing,places&&key=AIzaSyBnOC2cYnLyaaYXtnd_IEQWZLkqvg0tqoE'\n            loadingElement={<div style={{ height: `50vh` }} />}\n            containerElement={<div style={{ height: \"50vh\", width: \"100%\" }} />}\n            mapElement={<div style={{ height: `50vh` }} />}\n          />\n        </div>\n        <div className=\"row\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Cordinate</th>\n                <th>Title</th>\n                <th>Comment</th>\n                <th>Likes</th>\n                <th>Unlikes</th>\n                <th>Message</th>\n              </tr>\n            </thead>\n            <tbody>\n              {geoCache.map((v, i) => (\n                <tr key={i}>\n                  <td>{`${v.lat}, ${v.lng}`}</td>\n                  <td>{v.title}</td>\n                  <td>{v.comments}</td>\n                  <td>{v.likes}</td>\n                  <td>{v.unlikes}</td>\n                  <td>{v.message}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { toastr } from 'react-redux-toastr'\nimport { LOAD_GEO_CACHE, UPDATE_GEO_CACHE, LIKE_GEO_CACHE } from \"./ActionTypes\";\nimport { fetchGeoDetails, likeGeo } from \"../service/Geocaches\";\n\nexport function loadGeoCacheSuccess(geoCache) {\n  return {\n    type: LOAD_GEO_CACHE,\n    geoCache\n  };\n}\n\nexport function updateGeoCache(geoCacheDetails) {\n  return {\n    type: UPDATE_GEO_CACHE,\n    geoCacheDetails\n  };\n}\n\nexport function likeGeoCacheSuccess(id) {\n  return {\n    type: LIKE_GEO_CACHE,\n    id\n  };\n}\n\nexport function likeGeoCache(id) {\n  return function (dispatch) {\n    return likeGeo(id)\n      .then(() => {\n        dispatch(likeGeoCacheSuccess(id));\n        toastr.success('Success', 'Like Successfully')\n      })\n      .catch(error => {\n        toastr.error('Error', 'Server Error occured')\n        throw error;\n      });\n  };\n}\n\nexport function loadGeoCache() {\n  return function (dispatch) {\n    return fetchGeoDetails()\n      .then(geoCache => {\n        dispatch(loadGeoCacheSuccess(geoCache));\n      })\n      .catch(error => {\n        toastr.error('Error', 'Server Error occured')\n        throw error;\n      });\n  };\n}\n","import axios from \"axios\";\nimport { getToken } from '../helper/auth'\n\nexport function fetchGeoDetails() {\n  const token = getToken()\n  return axios\n    .get(\n      `https://blooming-cove-35281.herokuapp.com/api/geo_caches`,\n      {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          Authorization: `Bearer ${token}`\n        },\n        crossdomain: true\n      }\n    )\n    .then(response => response.data)\n    .catch(err => {\n      throw err;\n    });\n}\n\n\nexport function likeGeo(id) {\n  const token = getToken()\n  return axios\n    .post(\n      `https://blooming-cove-35281.herokuapp.com/api/geo_caches/${id}/like`, null,\n      {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          Authorization: `Bearer ${token}`\n        },\n        crossdomain: true\n      }\n    )\n    .then(response => response)\n    .catch(err => {\n      throw err;\n    });\n}\n","import { connect } from \"react-redux\";\nimport App from \"../../component/AppComponent\";\nimport { loadGeoCache, updateGeoCache, likeGeoCache } from \"../../actions/geoCacheAction\";\nimport { loggedInUser, registerUser } from \"../../actions/authAction\";\n\nconst mapStateToProps = state => ({\n  geoCache: state.GeoCacheReducer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadGeoCache: () => dispatch(loadGeoCache()),\n  loggedInUser: () => dispatch(loggedInUser()),\n  registerUser: () => dispatch(registerUser()),\n  updateGeoCache: geoCache => dispatch(updateGeoCache(geoCache)),\n  likeGeoCache: id => dispatch(likeGeoCache(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// import React from 'react'\nimport ReactDOM from \"react-dom\";\nimport ReduxToastr from 'react-redux-toastr'\n// import { Provider } from 'react-redux'\n// import { configureStore, history } from './store/configureStore'\n// import { ConnectedRouter } from 'react-router-redux';\nimport { Route, Switch } from \"react-router-dom\";\nimport React, { Fragment } from \"react\";\nimport { ActionCableProvider } from \"actioncable-client-react\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport store, { history } from \"./store\";\nimport Auth from \"./container/Auth\";\nimport Login from \"./container/LoginContainer\";\nimport Register from \"./container/RegisterContainer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\n\n// Other Imports\nimport * as registerServiceWorker from \"./serviceWorker\";\nimport AppContainer from \"./container/AppContainer\";\nconst WSS_URL = `wss://blooming-cove-35281.herokuapp.com/cabel`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Fragment>\n        <ReduxToastr\n          timeOut={4000}\n          newestOnTop={false}\n          preventDuplicates\n          position=\"top-right\"\n          transitionIn=\"fadeIn\"\n          transitionOut=\"fadeOut\"\n          progressBar\n          closeOnToastrClick />\n        <Switch>\n          <Route excat path=\"/register\" component={Register} />\n          <Route excat path=\"/login\" component={Login} />\n          <Auth>\n            <ActionCableProvider url={WSS_URL}>\n              <Route excat path=\"/\" component={AppContainer} />\n            </ActionCableProvider>\n          </Auth>\n        </Switch>\n      </Fragment>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker.register();\n"],"sourceRoot":""}